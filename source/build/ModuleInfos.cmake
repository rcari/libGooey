##### Gooey module infos

## Name
SET( MODULE_NAME "Gooey" )
STRING( TOUPPER ${MODULE_NAME} MODULE_VAR_NAME )

## Version
SET( ${MODULE_VAR_NAME}_VERSION_MAJOR	1 )
SET( ${MODULE_VAR_NAME}_VERSION_MINOR	0 )
SET( ${MODULE_VAR_NAME}_VERSION_PATCH	0 )
SET( ${MODULE_VAR_NAME}_VERSION_BUILD	0 )
SET( ${MODULE_VAR_NAME}_VERSION_STRING
	"${${MODULE_VAR_NAME}_VERSION_MAJOR}.${${MODULE_VAR_NAME}_VERSION_MINOR}.${${MODULE_VAR_NAME}_VERSION_PATCH}.${${MODULE_VAR_NAME}_VERSION_BUILD}" )

## Paths
GET_FILENAME_COMPONENT( ${MODULE_VAR_NAME}_ROOT_DIR ${CMAKE_CURRENT_LIST_DIR}/../.. ABSOLUTE )
SET( ${MODULE_VAR_NAME}_BUILD_DIR	${CMAKE_CURRENT_BINARY_DIR}/pixelfr0g/modules/${MODULE_NAME} )
SET( ${MODULE_VAR_NAME}_LIBRARY		${MODULE_NAME}${${MODULE_VAR_NAME}_VERSION_MAJOR} )
SET( ${MODULE_VAR_NAME}_INCLUDES
	#${QT_INCLUDES}						# Qt dependencies (useless because Kore already takes care of it!)
	${KORE_INCLUDES}					# Kore dependency
	${CMAKE_CURRENT_LIST_DIR}/../inc	# Headers
	${CMAKE_CURRENT_LIST_DIR}/..		# Templates cxx
)
SET( ${MODULE_VAR_NAME}_QT_RESOURCES_FILE ${${MODULE_VAR_NAME}_ROOT_DIR}/resources/gooey.qrc )

## Build definitions and linking flags
SET( ${MODULE_VAR_NAME}_DEFINITIONS ${QT_DEFINITIONS} )
SET( ${MODULE_VAR_NAME}_COMPILE_FLAGS )
SET( ${MODULE_VAR_NAME}_LINK_FLAGS )

IF( APPLE )
	SET( ${MODULE_VAR_NAME}_DEFINITIONS ${${MODULE_VAR_NAME}_DEFINITIONS};_K_MACX )
	SET( ${MODULE_VAR_NAME}_COMPILE_FLAGS "${${MODULE_VAR_NAME}_COMPILE_FLAGS} -Wall -Werror -Wno-overloaded-virtual" )
ELSEIF( MINGW )
	SET( ${MODULE_VAR_NAME}_DEFINITIONS ${${MODULE_VAR_NAME}_DEFINITIONS};_K_WIN32;_K_MINGW )
	SET( ${MODULE_VAR_NAME}_LINK_FLAGS ${${MODULE_VAR_NAME}_LINK_FLAGS} "-enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc" )
ELSEIF( MSVC )
	SET( ${MODULE_VAR_NAME}_DEFINITIONS ${${MODULE_VAR_NAME}_DEFINITIONS};_K_WIN32;_K_MSVC )
ELSEIF( UNIX )
	SET( ${MODULE_VAR_NAME}_DEFINITIONS ${${MODULE_VAR_NAME}_DEFINITIONS};_K_UNIX )
	SET( ${MODULE_VAR_NAME}_COMPILE_FLAGS "${${MODULE_VAR_NAME}_COMPILE_FLAGS} -Wall -Werror" )
ENDIF( APPLE )

# For parent scope inclusion
SET(
	${MODULE_VAR_NAME}_EXPORT_VARIABLES
	
	# Version
	${MODULE_VAR_NAME}_VERSION_MAJOR
	${MODULE_VAR_NAME}_VERSION_MINOR
	${MODULE_VAR_NAME}_VERSION_PATCH
	${MODULE_VAR_NAME}_VERSION_BUILD
	${MODULE_VAR_NAME}_VERSION_STRING
	
	# Include paths and build params
	${MODULE_VAR_NAME}_ROOT_DIR
	${MODULE_VAR_NAME}_BUILD_DIR
	${MODULE_VAR_NAME}_INCLUDES
	${MODULE_VAR_NAME}_LIBRARY
	${MODULE_VAR_NAME}_DEFINITIONS
	${MODULE_VAR_NAME}_QT_RESOURCES_FILE
	
	# Export itself
	${MODULE_VAR_NAME}_EXPORT_VARIABLES
)

FOREACH( VAR ${${MODULE_VAR_NAME}_EXPORT_VARIABLES} )
	SET( ${VAR} ${${VAR}} PARENT_SCOPE )
ENDFOREACH( VAR ${${MODULE_VAR_NAME}_EXPORT_VARIABLES} )
